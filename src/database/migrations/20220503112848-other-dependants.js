'use strict';

const { ABILITY_CHANGELOG_TABLE, AbilityChangelogSchema } = require('../models/ability-changelog.model');
const { ABILITY_FLAVOR_TEXT_TABLE, AbilityFlavorTextSchema } = require('../models/ability-flavor-text.model');
const { ABILITY_NAME_TABLE, AbilityNameSchema } = require('../models/ability-name.model');
const { ABILITY_TABLE, AbilitySchema }= require('../models/ability.model');
const { BERRY_FLAVOR_TABLE, BerryFlavorSchema } = require('../models/berry-flavor.model');
const { BERRY_TABLE, BerrySchema } = require('../models/berry.model');
const { CHARACTERISTIC_DESCRIPTION_TABLE, CharacteristicDescriptionSchema } = require('../models/characteristic-description.model');
const { CHARACTERISTIC_TABLE, CharacteristicSchema } = require('../models/characteristic.model');
const { GENERATION_NAME_TABLE, GenerationNameSchema } = require('../models/generation-name.model');
const { GENERATION_TABLE, GenerationSchema } = require('../models/generation.model');
const { ITEM_CATEGORY_TABLE, ItemCategorySchema } = require('../models/item-category.model');
const { ITEM_TABLE, ItemSchema } = require('../models/item.model');
const { NATURE_BATTLESTYLE_PREFERENCE_TABLE, NatureBattlestylePreferenceSchema } = require('../models/nature-battlestyle-preference.model');
const { NATURE_NAME_TABLE, NatureNameSchema } = require('../models/nature-name.model');
const { NATURE_POKEATHLON_STAT_TABLE, NaturePokeathlonStatSchema } = require('../models/nature-pokeathlon-stat.model');
const { NATURE_TABLE, NatureSchema } = require('../models/nature.model');
const { POKEMON_TYPE_TABLE, PokemonTypeSchema } = require('../models/pokemon-type.model');
const { POKEMON_TABLE, PokemonSchema }= require('../models/pokemon.model');
const { REGION_VERSIONGROUP_TABLE, RegionVersiongroupSchema } = require('../models/region-versiongroup.model');
const { STAT_NAME_TABLE, StatNameSchema } = require('../models/stat-name.model');
const { TYPE_EFFICACY_TABLE, TypeEfficacySchema } = require('../models/type-efficacy.model');
const { TYPE_GAME_INDEX_TABLE, TypeGameIndexSchema } = require('../models/type-game-index.model');
const { TYPE_NAME_TABLE, TypeNameSchema } = require('../models/type-name.model');
const { TYPE_TABLE, TypeSchema } = require('../models/type.model');
const { VERSION_GROUP_TABLE, VersionGroupSchema } = require('../models/version-group.model');
const { VERSION_NAME_TABLE, VersionNameSchema } = require('../models/version-name.model');
const { VERSION_TABLE, VersionSchema } = require('../models/version.model');
const { MOVE_TABLE, MoveSchema } = require('../models/move.model');
const { MOVE_CHANGELOG_TABLE, MoveChangelogSchema } = require('../models/move-changelog.model');
const { MOVE_EFFECT_CHANGELOG_TABLE, MoveEffectChangelogSchema } = require('../models/move-effect-changelog.model');
const { MOVE_FLAVOR_TEXT_TABLE, MoveFlavorTextSchema } = require('../models/move-flavor-text.model');
const { MOVE_META_TABLE, MoveMetaSchema } = require('../models/move-meta.model');
const { MOVE_META_CATEGORY_DESCRIPTION_TABLE, MoveMetaCategoryDescriptionSchema } = require('../models/move-meta-category-description.model');
const { MOVE_META_STAT_CHANGE_TABLE, MoveMetaStatChangeSchema } = require('../models/move-stat-change.model');
const { MOVE_NAME_TABLE, MoveNameSchema } = require('../models/move-name.model');
const { EVOLUTION_CHAIN_TABLE, EvolutionChainSchema } = require('../models/evolution-chain.model');
const { EXPERIENCE_TABLE, ExperienceSchema } = require('../models/experience.model');
const { POKEDEX_TABLE, PokedexSchema } = require('../models/pokedex.model');
const { POKEDEX_DESCRIPTION_TABLE, PokedexDescriptionSchema } = require('../models/pokedex-description.model');
const { POKEDEX_VERSIONGROUP_TABLE, PokedexVersiongroupSchema } = require('../models/pokedex-versiongroup.model');
const { SPECIE_TABLE, SpecieSchema } = require('../models/specie.model');
const { DEX_NUMBER_TABLE, DexNumberSchema } = require('../models/dex-number.model');
const { EGG_GROUP_SPECIE_TABLE, EggGroupSpecieSchema } = require('../models/eggroup-specie.model');
const { LOCATION_TABLE, LocationSchema } = require('../models/location.model');
const { EVOLUTION_TABLE, EvolutionSchema } = require('../models/evolution.model');
const { POKEMON_FORM_TABLE, PokemonFormSchema } = require('../models/pokemon-form.model');
const { GENERATION_POKEMON_FORM_TABLE, GenerationPokemonFormSchema } = require('../models/pokemon-form-generation.model');
const { POKEMON_FORM_NAME_TABLE, PokemonFormNameSchema } = require('../models/pokemon-form-name.model');
const { POKEMON_GAME_INDEX_TABLE, PokemonGameIndexSchema } = require('../models/pokemon-game-index.model');
const { ITEM_POKEMON_TABLE, ItemPokemonSchema } = require('../models/item-pokemon.model');
const { MOVE_POKEMON_TABLE, MovePokemonSchema } = require('../models/move-pokemon.model');
const { SPECIE_NAME_TABLE, SpecieNameSchema } = require('../models/specie-name.model');
const { SPECIE_DESCRIPTION_TABLE, SpecieDescriptionSchema } = require('../models/specie-description.model');
const { SPECIE_FLAVOR_TEXT_TABLE, SpecieFlavorTextSchema } = require('../models/specie-flavor-text.model');
const { POKEMON_STAT_TABLE, PokemonStatSchema } = require('../models/pokemon-stat.model');
const { MACHINE_TABLE, MachineSchema } = require('../models/machine.model');
const { ITEM_CATEGORY_NAME_TABLE, ItemCategoryNameSchema } = require('../models/item-category-name.model');
const { ITEM_FLAVOR_TEXT_TABLE, ItemFlavorTextSchema } = require('../models/item-flavor-text.model');
const { ITEM_GAME_INDEX_TABLE, ItemGameIndexSchema } = require('../models/item-game-index.model');
const { ITEM_NAME_TABLE, ItemNameSchema } = require('../models/item-name.model');
const { CONTEST_COMBO_TABLE, ContestComboSchema } = require('../models/contest-combo.model');
const { LOCATION_AREA_TABLE, LocationAreaSchema } = require('../models/location-area.model');
const { LOCATION_AREA_NAME_TABLE, LocationAreaNameSchema } = require('../models/location-area-name.model');
const { LOCATION_AREA_ENCOUNTER_RATE_TABLE, LocationAreaEncounterRateSchema } = require('../models/location-area-encounter-rate.model');
const { LOCATION_GAME_INDEX_TABLE, LocationGameIndexSchema } = require('../models/location-game-index.model');
const { LOCATION_NAME_TABLE, LocationNameSchema } = require('../models/location-name.model');
const { ENCOUNTER_SLOT_TABLE, EncounterSlotSchema } = require('../models/encounter-slot.model');
const { ENCOUNTER_TABLE, EncounterSchema } = require('../models/encounter.model');
const { ENCOUNTER_CONDITION_VALUE_TABLE, EncounterConditionValueSchema } = require('../models/encounter-condition-value.model');
const { ENCOUNTER_CONDITION_VALUE_MAP_TABLE, EncounterConditionValueMapSchema } = require('../models/encounter-condition-value-map.model');
const { ENCOUNTER_CONDITION_VALUE_NAME_TABLE, EncounterConditionValueNameSchema } = require('../models/encounter-condition-value-name.model');
const { PALPARK_TABLE, PalParkSchema } = require('../models/palpark.model');
const { ITEM_ATTRIBUTE_MAP_TABLE, ItemAttributeMapSchema } = require('../models/item-attribute-map.model');
const { MOVE_ATTRIBUTE_MAP_TABLE, MoveAttributeMapSchema } = require('../models/move-attribute-map.model');
const { POKEDEX_NAME_TABLE, PokedexNameSchema } = require('../models/pokedex-name.model');
const { ABILITY_CHANGELOG_PROSE_TABLE, AbilityChangelogProseSchema } = require('../models/ability-changelog-prose.model');
const { ABILITY_EFFECT_TEXT_TABLE, AbilityEffectTextSchema } = require('../models/ability-effect-text.model');
const { ITEM_EFFECT_TEXT_TABLE, ItemEffectTextSchema } = require('../models/item-effect-text.model');
const { MOVE_EFFECT_CHANGELOG_PROSE_TABLE, MoveEffectChangelogProseSchema } = require('../models/move-changelog-prose.model');
const { ITEM_FLING_EFFECT_PROSE_TABLE, ItemFlingEffectProseSchema } = require('../models/item-fling-effect-prose.model');
const { ITEM_SPRITE_TABLE, ItemSpritesSchema } = require('../models/item-sprites.model');
const { POKEMON_FORM_SPRITE_TABLE, PokemonFormSpritesSchema } = require('../models/pokemon-form-sprites.model');
const { POKEMON_SPRITE_TABLE, PokemonSpritesSchema } = require('../models/pokemon-sprites.model');
const { STAT_TABLE, StatSchema } = require('../models/stat.model');
const { BERRY_FLAVOR_NAME_TABLE, BerryFlavorNameSchema } = require('../models/berry-flavor-name.model');

module.exports = {
  async up (queryInterface, Sequelize) {
    await queryInterface.createTable(BERRY_FLAVOR_TABLE, BerryFlavorSchema);
    await queryInterface.createTable(BERRY_FLAVOR_NAME_TABLE, BerryFlavorNameSchema);
    await queryInterface.createTable(STAT_TABLE, StatSchema);
    await queryInterface.createTable(CHARACTERISTIC_TABLE, CharacteristicSchema);
    await queryInterface.createTable(CHARACTERISTIC_DESCRIPTION_TABLE, CharacteristicDescriptionSchema);
    await queryInterface.createTable(GENERATION_TABLE, GenerationSchema);
    await queryInterface.createTable(ABILITY_TABLE, AbilitySchema);
    await queryInterface.createTable(ITEM_CATEGORY_TABLE, ItemCategorySchema);
    await queryInterface.createTable(ITEM_TABLE, ItemSchema);
    await queryInterface.createTable(VERSION_GROUP_TABLE, VersionGroupSchema);
    await queryInterface.createTable(VERSION_TABLE, VersionSchema);
    await queryInterface.createTable(ABILITY_CHANGELOG_TABLE, AbilityChangelogSchema);
    await queryInterface.createTable(ABILITY_CHANGELOG_PROSE_TABLE, AbilityChangelogProseSchema);
    await queryInterface.createTable(ABILITY_EFFECT_TEXT_TABLE, AbilityEffectTextSchema);
    await queryInterface.createTable(ABILITY_FLAVOR_TEXT_TABLE, AbilityFlavorTextSchema);
    await queryInterface.createTable(ABILITY_NAME_TABLE, AbilityNameSchema);
    await queryInterface.createTable(EVOLUTION_CHAIN_TABLE, EvolutionChainSchema);
    await queryInterface.createTable(POKEDEX_TABLE, PokedexSchema);
    await queryInterface.createTable(SPECIE_TABLE, SpecieSchema);
    await queryInterface.createTable(DEX_NUMBER_TABLE, DexNumberSchema);
    await queryInterface.createTable(EGG_GROUP_SPECIE_TABLE, EggGroupSpecieSchema);
    await queryInterface.createTable(TYPE_TABLE, TypeSchema);
    await queryInterface.createTable(BERRY_TABLE, BerrySchema);
    await queryInterface.createTable(MOVE_TABLE, MoveSchema);
    await queryInterface.createTable(POKEMON_TABLE, PokemonSchema);
    await queryInterface.createTable(CONTEST_COMBO_TABLE, ContestComboSchema);
    await queryInterface.createTable(EXPERIENCE_TABLE, ExperienceSchema);
    await queryInterface.createTable(GENERATION_NAME_TABLE, GenerationNameSchema);
    await queryInterface.createTable(ITEM_ATTRIBUTE_MAP_TABLE, ItemAttributeMapSchema);
    await queryInterface.createTable(ITEM_CATEGORY_NAME_TABLE, ItemCategoryNameSchema);
    await queryInterface.createTable(ITEM_EFFECT_TEXT_TABLE, ItemEffectTextSchema);
    await queryInterface.createTable(ITEM_FLAVOR_TEXT_TABLE, ItemFlavorTextSchema);
    await queryInterface.createTable(ITEM_FLING_EFFECT_PROSE_TABLE, ItemFlingEffectProseSchema);
    await queryInterface.createTable(ITEM_GAME_INDEX_TABLE, ItemGameIndexSchema);
    await queryInterface.createTable(ITEM_NAME_TABLE, ItemNameSchema);
    await queryInterface.createTable(ITEM_POKEMON_TABLE, ItemPokemonSchema);
    await queryInterface.createTable(LOCATION_TABLE, LocationSchema);
    await queryInterface.createTable(EVOLUTION_TABLE, EvolutionSchema);
    await queryInterface.createTable(LOCATION_AREA_TABLE, LocationAreaSchema);
    await queryInterface.createTable(ENCOUNTER_SLOT_TABLE, EncounterSlotSchema);
    await queryInterface.createTable(ENCOUNTER_TABLE, EncounterSchema);
    await queryInterface.createTable(ENCOUNTER_CONDITION_VALUE_TABLE, EncounterConditionValueSchema);
    await queryInterface.createTable(ENCOUNTER_CONDITION_VALUE_MAP_TABLE, EncounterConditionValueMapSchema);
    await queryInterface.createTable(ENCOUNTER_CONDITION_VALUE_NAME_TABLE, EncounterConditionValueNameSchema);
    await queryInterface.createTable(LOCATION_AREA_ENCOUNTER_RATE_TABLE, LocationAreaEncounterRateSchema);
    await queryInterface.createTable(LOCATION_AREA_NAME_TABLE, LocationAreaNameSchema);
    await queryInterface.createTable(LOCATION_GAME_INDEX_TABLE, LocationGameIndexSchema);
    await queryInterface.createTable(LOCATION_NAME_TABLE, LocationNameSchema);
    await queryInterface.createTable(MACHINE_TABLE, MachineSchema);
    await queryInterface.createTable(MOVE_ATTRIBUTE_MAP_TABLE, MoveAttributeMapSchema);
    await queryInterface.createTable(MOVE_CHANGELOG_TABLE, MoveChangelogSchema);
    await queryInterface.createTable(MOVE_EFFECT_CHANGELOG_TABLE, MoveEffectChangelogSchema);
    await queryInterface.createTable(MOVE_EFFECT_CHANGELOG_PROSE_TABLE, MoveEffectChangelogProseSchema);
    await queryInterface.createTable(MOVE_FLAVOR_TEXT_TABLE, MoveFlavorTextSchema);
    await queryInterface.createTable(MOVE_META_TABLE, MoveMetaSchema);
    await queryInterface.createTable(MOVE_META_CATEGORY_DESCRIPTION_TABLE, MoveMetaCategoryDescriptionSchema);
    await queryInterface.createTable(MOVE_META_STAT_CHANGE_TABLE, MoveMetaStatChangeSchema);
    await queryInterface.createTable(MOVE_NAME_TABLE, MoveNameSchema);
    await queryInterface.createTable(MOVE_POKEMON_TABLE, MovePokemonSchema);
    await queryInterface.createTable(NATURE_TABLE, NatureSchema);
    await queryInterface.createTable(NATURE_BATTLESTYLE_PREFERENCE_TABLE, NatureBattlestylePreferenceSchema);
    await queryInterface.createTable(NATURE_NAME_TABLE, NatureNameSchema);
    await queryInterface.createTable(NATURE_POKEATHLON_STAT_TABLE, NaturePokeathlonStatSchema);
    await queryInterface.createTable(PALPARK_TABLE, PalParkSchema);
    await queryInterface.createTable(POKEDEX_DESCRIPTION_TABLE, PokedexDescriptionSchema);
    await queryInterface.createTable(POKEDEX_NAME_TABLE, PokedexNameSchema);
    await queryInterface.createTable(POKEDEX_VERSIONGROUP_TABLE, PokedexVersiongroupSchema);
    await queryInterface.createTable(POKEMON_FORM_TABLE, PokemonFormSchema);
    await queryInterface.createTable(POKEMON_FORM_NAME_TABLE, PokemonFormNameSchema);
    await queryInterface.createTable(GENERATION_POKEMON_FORM_TABLE, GenerationPokemonFormSchema);
    await queryInterface.createTable(POKEMON_GAME_INDEX_TABLE, PokemonGameIndexSchema);
    await queryInterface.createTable(POKEMON_STAT_TABLE, PokemonStatSchema);
    await queryInterface.createTable(POKEMON_TYPE_TABLE, PokemonTypeSchema);
    await queryInterface.createTable(REGION_VERSIONGROUP_TABLE, RegionVersiongroupSchema);
    await queryInterface.createTable(SPECIE_DESCRIPTION_TABLE, SpecieDescriptionSchema);
    await queryInterface.createTable(SPECIE_FLAVOR_TEXT_TABLE, SpecieFlavorTextSchema);
    await queryInterface.createTable(SPECIE_NAME_TABLE, SpecieNameSchema);
    await queryInterface.createTable(STAT_NAME_TABLE, StatNameSchema);
    await queryInterface.createTable(TYPE_EFFICACY_TABLE, TypeEfficacySchema);
    await queryInterface.createTable(TYPE_GAME_INDEX_TABLE, TypeGameIndexSchema);
    await queryInterface.createTable(TYPE_NAME_TABLE, TypeNameSchema);
    await queryInterface.createTable(VERSION_NAME_TABLE, VersionNameSchema);
    await queryInterface.createTable(ITEM_SPRITE_TABLE, ItemSpritesSchema);
    await queryInterface.createTable(POKEMON_FORM_SPRITE_TABLE, PokemonFormSpritesSchema);
    await queryInterface.createTable(POKEMON_SPRITE_TABLE, PokemonSpritesSchema);
  },

  async down (queryInterface, Sequelize) {
    await queryInterface.dropTable(POKEMON_SPRITE_TABLE);
    await queryInterface.dropTable(POKEMON_FORM_SPRITE_TABLE);
    await queryInterface.dropTable(ITEM_SPRITE_TABLE);
    await queryInterface.dropTable(VERSION_NAME_TABLE);
    await queryInterface.dropTable(TYPE_NAME_TABLE);
    await queryInterface.dropTable(TYPE_GAME_INDEX_TABLE);
    await queryInterface.dropTable(TYPE_EFFICACY_TABLE);
    await queryInterface.dropTable(STAT_NAME_TABLE);
    await queryInterface.dropTable(SPECIE_NAME_TABLE);
    await queryInterface.dropTable(SPECIE_FLAVOR_TEXT_TABLE);
    await queryInterface.dropTable(SPECIE_DESCRIPTION_TABLE);
    await queryInterface.dropTable(REGION_VERSIONGROUP_TABLE);
    await queryInterface.dropTable(POKEMON_TYPE_TABLE);
    await queryInterface.dropTable(POKEMON_STAT_TABLE);
    await queryInterface.dropTable(POKEMON_GAME_INDEX_TABLE);
    await queryInterface.dropTable(POKEMON_FORM_NAME_TABLE);
    await queryInterface.dropTable(POKEMON_FORM_TABLE);
    await queryInterface.dropTable(POKEDEX_VERSIONGROUP_TABLE);
    await queryInterface.dropTable(POKEDEX_NAME_TABLE);
    await queryInterface.dropTable(POKEDEX_DESCRIPTION_TABLE);
    await queryInterface.dropTable(PALPARK_TABLE);
    await queryInterface.dropTable(NATURE_POKEATHLON_STAT_TABLE);
    await queryInterface.dropTable(NATURE_NAME_TABLE);
    await queryInterface.dropTable(NATURE_BATTLESTYLE_PREFERENCE_TABLE);
    await queryInterface.dropTable(NATURE_TABLE);
    await queryInterface.dropTable(MOVE_POKEMON_TABLE);
    await queryInterface.dropTable(MOVE_NAME_TABLE);
    await queryInterface.dropTable(MOVE_META_STAT_CHANGE_TABLE);
    await queryInterface.dropTable(MOVE_META_CATEGORY_DESCRIPTION_TABLE);
    await queryInterface.dropTable(MOVE_META_TABLE);
    await queryInterface.dropTable(MOVE_FLAVOR_TEXT_TABLE);
    await queryInterface.dropTable(MOVE_EFFECT_CHANGELOG_PROSE_TABLE);
    await queryInterface.dropTable(MOVE_EFFECT_CHANGELOG_TABLE);
    await queryInterface.dropTable(MOVE_CHANGELOG_TABLE);
    await queryInterface.dropTable(MOVE_ATTRIBUTE_MAP_TABLE);
    await queryInterface.dropTable(MACHINE_TABLE);
    await queryInterface.dropTable(LOCATION_NAME_TABLE);
    await queryInterface.dropTable(LOCATION_GAME_INDEX_TABLE);
    await queryInterface.dropTable(LOCATION_AREA_NAME_TABLE);
    await queryInterface.dropTable(LOCATION_AREA_ENCOUNTER_RATE_TABLE);
    await queryInterface.dropTable(LOCATION_AREA_TABLE);
    await queryInterface.dropTable(LOCATION_TABLE);
    await queryInterface.dropTable(ITEM_POKEMON_TABLE);
    await queryInterface.dropTable(ITEM_NAME_TABLE);
    await queryInterface.dropTable(ITEM_GAME_INDEX_TABLE);
    await queryInterface.dropTable(ITEM_FLING_EFFECT_PROSE_TABLE);
    await queryInterface.dropTable(ITEM_FLAVOR_TEXT_TABLE);
    await queryInterface.dropTable(ITEM_EFFECT_TEXT_TABLE);
    await queryInterface.dropTable(ITEM_CATEGORY_NAME_TABLE);
    await queryInterface.dropTable(ITEM_ATTRIBUTE_MAP_TABLE);
    await queryInterface.dropTable(GENERATION_POKEMON_FORM_TABLE);
    await queryInterface.dropTable(GENERATION_NAME_TABLE);
    await queryInterface.dropTable(EXPERIENCE_TABLE);
    await queryInterface.dropTable(EVOLUTION_TABLE);
    await queryInterface.dropTable(ENCOUNTER_SLOT_TABLE);
    await queryInterface.dropTable(ENCOUNTER_CONDITION_VALUE_NAME_TABLE);
    await queryInterface.dropTable(ENCOUNTER_CONDITION_VALUE_MAP_TABLE);
    await queryInterface.dropTable(ENCOUNTER_CONDITION_VALUE_TABLE);
    await queryInterface.dropTable(ENCOUNTER_TABLE);
    await queryInterface.dropTable(CONTEST_COMBO_TABLE);
    await queryInterface.dropTable(POKEMON_TABLE);
    await queryInterface.dropTable(MOVE_TABLE);
    await queryInterface.dropTable(BERRY_TABLE);
    await queryInterface.dropTable(TYPE_TABLE);
    await queryInterface.dropTable(EGG_GROUP_SPECIE_TABLE);
    await queryInterface.dropTable(DEX_NUMBER_TABLE);
    await queryInterface.dropTable(SPECIE_TABLE);
    await queryInterface.dropTable(POKEDEX_TABLE);
    await queryInterface.dropTable(EVOLUTION_CHAIN_TABLE);
    await queryInterface.dropTable(ABILITY_NAME_TABLE);
    await queryInterface.dropTable(ABILITY_FLAVOR_TEXT_TABLE);
    await queryInterface.dropTable(ABILITY_EFFECT_TEXT_TABLE);
    await queryInterface.dropTable(ABILITY_CHANGELOG_PROSE_TABLE);
    await queryInterface.dropTable(ABILITY_CHANGELOG_TABLE);
    await queryInterface.dropTable(VERSION_TABLE);
    await queryInterface.dropTable(VERSION_GROUP_TABLE);
    await queryInterface.dropTable(ITEM_TABLE);
    await queryInterface.dropTable(ITEM_CATEGORY_TABLE);
    await queryInterface.dropTable(ABILITY_TABLE);
    await queryInterface.dropTable(GENERATION_TABLE);
    await queryInterface.dropTable(CHARACTERISTIC_DESCRIPTION_TABLE);
    await queryInterface.dropTable(CHARACTERISTIC_TABLE);
    await queryInterface.dropTable(STAT_TABLE);
    await queryInterface.dropTable(BERRY_FLAVOR_TABLE);
  }
};
